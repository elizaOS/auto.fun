import { useEffect } from "react";
import { RoundedButton } from "./button/RoundedButton";

type CustomToastProps = {
  message: string;
  closeToast?: () => void;
} & (
  | {
      status: "completed";
    }
  | {
      status: "failed";
      tryAgain?: () => void;
    }
);

export const Toast = ({ message, closeToast, ...props }: CustomToastProps) => {
  useEffect(() => {
    if (props.status === "completed") {
      setTimeout(() => {
        closeToast?.();
      }, 5000);
    }
  }, [closeToast, props.status]);

  return (
    <div
      className={`flex flex-col gap-2 p-4 relative ${
        props.status === "failed"
          ? "bg-[#49132f] rounded-xl overflow-hidden border border-[#ef4242]"
          : "bg-[#282d3a] rounded-xl overflow-hidden border border-[#14ed8c]"
      }`}
    >
      {closeToast && (
        <button
          onClick={closeToast}
          className="absolute top-2 right-2 text-white hover:text-gray-300"
          aria-label="Close toast"
        >
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M17 3.33989C18.5083 4.21075 19.7629 5.46042 20.6398 6.96519C21.5167 8.46997 21.9854 10.1777 21.9994 11.9192C22.0135 13.6608 21.5725 15.3758 20.72 16.8946C19.8676 18.4133 18.6332 19.6831 17.1392 20.5782C15.6452 21.4733 13.9434 21.9627 12.2021 21.998C10.4608 22.0332 8.74055 21.6131 7.21155 20.7791C5.68256 19.9452 4.39787 18.7264 3.48467 17.2434C2.57146 15.7604 2.06141 14.0646 2.005 12.3239L2 11.9999L2.005 11.6759C2.061 9.94888 2.56355 8.26585 3.46364 6.79089C4.36373 5.31592 5.63065 4.09934 7.14089 3.25977C8.65113 2.42021 10.3531 1.98629 12.081 2.00033C13.8089 2.01437 15.5036 2.47589 17 3.33989ZM10.511 9.13989C10.3015 9.01517 10.0536 8.9713 9.81401 9.01652C9.57441 9.06175 9.35959 9.19296 9.20995 9.38547C9.06031 9.57799 8.98617 9.81854 9.00146 10.0619C9.01675 10.3052 9.12043 10.5346 9.293 10.7069L10.585 11.9999L9.293 13.2929L9.21 13.3869C9.05459 13.5879 8.98151 13.8405 9.0056 14.0934C9.02969 14.3463 9.14916 14.5806 9.33972 14.7486C9.53029 14.9167 9.77767 15.0059 10.0316 14.9981C10.2856 14.9904 10.527 14.8862 10.707 14.7069L12 13.4149L13.293 14.7069L13.387 14.7899C13.588 14.9453 13.8406 15.0184 14.0935 14.9943C14.3464 14.9702 14.5807 14.8507 14.7488 14.6602C14.9168 14.4696 15.006 14.2222 14.9982 13.9683C14.9905 13.7143 14.8863 13.4728 14.707 13.2929L13.415 11.9999L14.707 10.7069L14.79 10.6129C14.9454 10.4119 15.0185 10.1593 14.9944 9.90637C14.9703 9.65344 14.8508 9.41917 14.6603 9.25114C14.4697 9.08311 14.2223 8.99391 13.9684 9.00166C13.7144 9.00942 13.473 9.11354 13.293 9.29289L12 10.5849L10.707 9.29289L10.613 9.20989L10.511 9.13989Z"
              fill="white"
              fillOpacity="0.3"
            />
          </svg>
        </button>
      )}

      <div className="self-stretch flex items-start gap-2">
        <div className="grow text-white text-base font-medium font-['Inter'] leading-normal">
          {message}
        </div>
      </div>
      <div className="self-stretch flex items-center gap-2">
        <div className="text-[#14ee8c] text-base font-bold font-['Inter'] leading-normal w-full">
          <div className="flex flex-col gap-2 w-full">
            {props.status === "completed" ? (
              <div className="flex gap-2">
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M17 3.33989C18.5083 4.21075 19.7629 5.46042 20.6398 6.96519C21.5167 8.46997 21.9854 10.1777 21.9994 11.9192C22.0135 13.6608 21.5725 15.3758 20.72 16.8946C19.8676 18.4133 18.6332 19.6831 17.1392 20.5782C15.6452 21.4733 13.9434 21.9627 12.2021 21.998C10.4608 22.0332 8.74055 21.6131 7.21155 20.7791C5.68256 19.9452 4.39787 18.7264 3.48467 17.2434C2.57146 15.7604 2.06141 14.0646 2.005 12.3239L2 11.9999L2.005 11.6759C2.061 9.94888 2.56355 8.26585 3.46364 6.79089C4.36373 5.31592 5.63065 4.09934 7.14089 3.25977C8.65113 2.42021 10.3531 1.98629 12.081 2.00033C13.8089 2.01437 15.5036 2.47589 17 3.33989ZM15.707 9.29289C15.5348 9.12072 15.3057 9.01729 15.0627 9.002C14.8197 8.98672 14.5794 9.06064 14.387 9.20989L14.293 9.29289L11 12.5849L9.707 11.2929L9.613 11.2099C9.42058 11.0607 9.18037 10.9869 8.9374 11.0022C8.69444 11.0176 8.46541 11.121 8.29326 11.2932C8.12112 11.4653 8.01768 11.6943 8.00235 11.9373C7.98702 12.1803 8.06086 12.4205 8.21 12.6129L8.293 12.7069L10.293 14.7069L10.387 14.7899C10.5624 14.926 10.778 14.9998 11 14.9998C11.222 14.9998 11.4376 14.926 11.613 14.7899L11.707 14.7069L15.707 10.7069L15.79 10.6129C15.9393 10.4205 16.0132 10.1802 15.9979 9.93721C15.9826 9.69419 15.8792 9.46509 15.707 9.29289Z"
                    fill="#14EE8C"
                  />
                </svg>
                Completed
              </div>
            ) : (
              <>
                <div className="flex gap-2">
                  <svg
                    width="20"
                    height="20"
                    viewBox="0 0 20 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M15 1.33989C16.5202 2.21758 17.7826 3.47997 18.6603 5.00017C19.538 6.52038 20 8.24483 20 10.0002C20 11.7556 19.5379 13.48 18.6602 15.0002C17.7825 16.5204 16.5201 17.7828 14.9999 18.6605C13.4797 19.5381 11.7552 20.0002 9.99984 20.0001C8.24446 20.0001 6.52002 19.538 4.99984 18.6603C3.47965 17.7826 2.21729 16.5202 1.33963 15C0.46198 13.4797 -4.45897e-05 11.7553 3.22765e-09 9.99989L0.00500012 9.67589C0.0610032 7.94888 0.563548 6.26585 1.46364 4.79089C2.36373 3.31592 3.63065 2.09934 5.14089 1.25977C6.65113 0.420205 8.35315 -0.0137108 10.081 0.000330246C11.8089 0.0143713 13.5036 0.47589 15 1.33989ZM10 12.9999C9.73478 12.9999 9.48043 13.1052 9.29289 13.2928C9.10536 13.4803 9 13.7347 9 13.9999V14.0099C9 14.2751 9.10536 14.5295 9.29289 14.717C9.48043 14.9045 9.73478 15.0099 10 15.0099C10.2652 15.0099 10.5196 14.9045 10.7071 14.717C10.8946 14.5295 11 14.2751 11 14.0099V13.9999C11 13.7347 10.8946 13.4803 10.7071 13.2928C10.5196 13.1052 10.2652 12.9999 10 12.9999ZM10 5.99989C9.73478 5.99989 9.48043 6.10525 9.29289 6.29279C9.10536 6.48032 9 6.73468 9 6.99989V10.9999C9 11.2651 9.10536 11.5195 9.29289 11.707C9.48043 11.8945 9.73478 11.9999 10 11.9999C10.2652 11.9999 10.5196 11.8945 10.7071 11.707C10.8946 11.5195 11 11.2651 11 10.9999V6.99989C11 6.73468 10.8946 6.48032 10.7071 6.29279C10.5196 6.10525 10.2652 5.99989 10 5.99989Z"
                      fill="#EF4242"
                    />
                  </svg>
                  <div className="text-[#EF4242]">Failed</div>
                </div>

                <div className="mt-2 w-full">
                  {props.tryAgain && (
                    <RoundedButton
                      color="red"
                      onClick={() => {
                        closeToast?.();
                        props.tryAgain?.();
                      }}
                      className="w-full p-2"
                    >
                      Try Again
                    </RoundedButton>
                  )}
                </div>
              </>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};
